openapi: 3.0.1
info:
  title: TfGM API Wrapper
  version: v1
paths:
  /api/services/{stop}:
    get:
      tags:
        - Service
      summary: Retrieves the services for a given stop
      parameters:
        - name: stop
          in: path
          description: Stop name or Tlaref for stop
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormattedServices'
        '400':
          description: Invalid Stop Name or TLAREF provided
        '500':
          description: An internal server error occured
  /api/stops:
    get:
      tags:
        - Stops
      summary: Returns a JSON List of all Stops.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stop'
components:
  schemas:
    FormattedServices:
      type: object
      properties:
        destinations:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Tram'
            nullable: true
          description: Dict between destination and a sorted set of trams for that dest
          nullable: true
          readOnly: true
        messages:
          uniqueItems: true
          type: array
          items:
            type: string
          description: Service messages for the
          nullable: true
          readOnly: true
      additionalProperties: false
      description: Stores services by destination, ordered by ascending wait time.
    Stop:
      type: object
      properties:
        stopName:
          type: string
          description: Name of the stop, such as Piccadilly
          nullable: true
        tlaref:
          type: string
          description: 3 code ID for the stop, e.g. PIC for Piccadilly
          nullable: true
        ids:
          type: array
          items: {}
          description: IDs associated with the stop. Larger stops will have more IDs.
          nullable: true
        atcoCode:
          type: string
          description: "Naptan ID for the stop. This can be used to look up more information\r\nin government transport data sets"
          nullable: true
        latitude:
          type: number
          description: Stop Latitude. This may be different to that shown by apple or google maps.
          format: double
        longitude:
          type: number
          description: Stop Longitude. This may be different to that shown by apple or google maps.
          format: double
        street:
          type: string
          description: "Street the stop is on. If it is not directly on a street, it will be prefixed\r\nwith 'Off'."
          nullable: true
        roadCrossing:
          type: string
          description: "Closest road intersection to the stop. For stops where there is not a close intersection,\r\nthis will be blank."
          nullable: true
        line:
          type: string
          description: "Line the stop is on. This is a single value and does not contain all lines.\r\nThis will be a destination, such as Bury, and does not include the line colour(s)."
          nullable: true
        stopZone:
          type: string
          description: "Ticket fare zone for the stop. If a stop is in multiple zones, it will\r\nbe shown as 'a/b', where a is the smaller of the two zones, e.g. '3/4'."
          nullable: true
      additionalProperties: false
      description: Stores information about a single stop.
    Tram:
      type: object
      properties:
        destination:
          type: string
          description: Destination for the tram, e.g. Piccadilly.
          nullable: true
          example: Piccadilly
        carriages:
          type: string
          description: Number of carriages the tram has, either 'Single' or 'Double'
          nullable: true
          example: Double
        status:
          type: string
          description: Status of the Tram, e.g. 'Due'
          nullable: true
          example: Due
        wait:
          type: string
          description: "Wait for the tram, an int of mins.\r\nThis is stored as a string as this is the format returned by the TfGM API.\r\nIt is not converted as no calculations are completed using it."
          nullable: true
          example: '10'
      additionalProperties: false
      description: Stores service information about a single tram.
